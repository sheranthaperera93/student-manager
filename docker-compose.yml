services:
  db:
    image: bitnami/postgresql
    container_name: postgresql
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_DB: studentmanagement
      POSTGRES_USER: sheranthap
      POSTGRES_PASSWORD: Test@123
    volumes:
      - pgdata:/var/lib/postgresql/data

  # federation-gateway:
  #   build: .
  #   ports:
  #     - "3001:3001"
  #   depends_on:
  #     - users
  #     - notifications

  # users:
  #   image: users-service
  #   container_name: user-service
  #   volumes:
  #     - shared_data:/app/dist/uploads
  #   ports:
  #     - "3002:3002"

  # job-queue:
  #   image: job-queue-service
  #   container_name: job-queue-service
  #   volumes:
  #     - shared_data:/app/dist/uploads
  #   ports:
  #     - 3006:3006

  # notifications:
  #   image: notifications-service-image
  #   ports:
  #     - "3003:3003"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=FortudeSmP@2023
    volumes:
      - redis_data:/data

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://host.docker.internal:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_NODE_ID: "1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
    depends_on:
      - kafka

volumes:
  pgdata:
    driver: local
  redis_data:
    driver: local
  shared_data:
    driver: local
  kafka_data:
    driver: local
